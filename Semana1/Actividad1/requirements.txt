Laboratorio 1.1
En la siguiente dirección se encuentran los datos del día 18 de abril de 2022 acerca de la 
incidencia del Coronavirus COVID-19 en el mundo. Los datos fueron extraídos del 
repositorio mantenido por la Universidad Johns Hopkins. Los datos se actualizan 
diariamente.
− https://raw.githubusercontent.com/CSSEGISandData/COVID19/master/csse_covid_19_data/csse_covid_19_daily_reports/04-18-2022.csv

2. Estadística descriptiva y avanzada
2.1. Calcular métricas clave por país: Confirmados, Fallecidos, CFR 
(muertes/confirmados) y tasas por 100k.
2.2. Generar intervalos de confianza para CFR.
2.3. Aplicar test de hipótesis de proporciones para comparar CFR entre dos países 
seleccionados.
2.4. Detectar outliers usando Z-score o IQR.
2.5. Construir un gráfico de control (3σ) de muertes diarias para identificar anomalías.
3. Modelado y proyecciones
3.1. Generar series de tiempo por país con suavizado de 7 días.
3.2. Implementar un modelo de pronóstico (SARIMA o ETS) para proyectar casos y 
muertes a 14 días.
3.3. Validar el modelo con backtesting (MAE/MAPE).
3.4. Mostrar bandas de confianza en la gráfica de forecast.
4. Segmentación y reducción de dimensionalidad
4.1. Construir un clustering de países usando K-means u otro algoritmo, con variables: 
tasas, CFR y crecimiento 7d.
4.2. Aplicar PCA para reducción a 2 componentes y graficar el scatter (PC1 vs PC2) 
coloreado por clúster.
4.3. Interpretar y documentar los perfiles de cada clúster (ej. “Países con alta mortalidad 
y baja recuperación”).
5. Dashboard en Streamlit. El dashboard debe incluir como mínimo:
5.1. Sidebar con filtros (rango de fechas, países, provincias, umbral de confirmados, 
carga de población).
5.2. KPIs principales (Confirmados, Fallecidos, CFR, tasas por 100k).
5.3. Pestañas (st.tabs) organizadas en:
− Visión general: barras top-N, mapa interactivo.
− Estadística avanzada: boxplots, test de hipótesis, intervalos.
− Modelado temporal: series, forecast, validación.
− Clustering y PCA: scatter clusters, interpretación.
− Calidad de datos: nulos, inconsistencias, gráfico de control.
5.4. Exportación de datos y gráficos en CSV y PNG/SVG.
5.5. Narrativa automática opcional: un párrafo generado con insights del análisis.
6. Propuesta de startup o innovación
6.1. Identificar un problema real de gestión sanitaria (ej. detección temprana de brotes, 
logística de insumos, semáforos de riesgo).
6.2. Diseñar una solución digital apoyada en los dashboards e insights generados.
6.3. Definir:
− Cliente y aliados (MINSA, INS, EsSalud, municipalidades, clínicas privadas).
− MVP (mínimo producto viable).
− Métrica estrella (North Star) y KPIs de impacto.
− Modelo de negocio (suscripción, API premium, licenciamiento).
− Roadmap en fases (vigilancia → predicción → interoperabilidad).
7. Gestión con Git. Crear un repositorio en GitHub con la siguiente estructura 
mínima:
├─ app/app.py
├─ reports/estadistica.md
├─ reports/startup.md
├─ requirements.txt
├─ README.md
└─ .gitignore
7.1. Usar ramas por feature (feature/eda, feature/forecast, docs/startup).
7.2. Mensajes de commit en formato Conventional Commits (feat:, fix:, docs:).
7.3. Hacer pull requests con capturas de pantalla.
7.4. Crear release v1.0.0 y publicar en Streamlit Cloud
